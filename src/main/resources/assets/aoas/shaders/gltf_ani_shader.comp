// 原始数据
layout(std430, binding = 0) readonly buffer OriginalVertexData {
    float originalBuffer[];
};

layout(std430, binding = 1) readonly buffer OriginalIndexData {
    int originalBuffer[];
};

// part渲染状态
layout(std430, binding = 2) readonly buffer BoneRenderStatus {
    PartRenderInfo partList[];
};

// 渲染buffer
layout(std430, binding = 3) buffer RenderVertexData {
    float originalBuffer[];
};

layout(std430, binding = 4) buffer RenderIndexData {
    int originalBuffer[];
};

struct BoneRenderStatus {
    mat4 pose;             // 模型变换矩阵
    mat3 normal;           // 法线矩阵
    uint lightmapUV;
    uint UOffset;
    uint VOffset;
    uint vertexStart;
    uint vertexEnd;
};

void main() {
    uint index = gl_GlobalInvocationID.x;


}